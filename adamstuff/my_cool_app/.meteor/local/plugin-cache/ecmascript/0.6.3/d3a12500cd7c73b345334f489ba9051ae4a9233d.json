{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"var Template = void 0;\nmodule.import('meteor/templating', {\n  \"Template\": function (v) {\n    Template = v;\n  }\n}, 0);\nvar ReactiveVar = void 0;\nmodule.import('meteor/reactive-var', {\n  \"ReactiveVar\": function (v) {\n    ReactiveVar = v;\n  }\n}, 1);\nmodule.import('./main.html');\nvar Women = void 0;\nmodule.import('../imports/api/women.js', {\n  \"Women\": function (v) {\n    Women = v;\n  }\n}, 3);\nMeteor.startup(function () {\n  GoogleMaps.load({\n    key: \"AIzaSyDIB1UZP3aXcXs7XwYndOpJWI6Spe2K-Nk\"\n  });\n}); // Template.hello.onCreated(function helloOnCreated() {\n// \t// counter starts at 0\n// \tthis.counter = new ReactiveVar(0);\n// });\n// Template.hello.helpers({\n// \tcounter() {\n// \t\treturn Template.instance().counter.get();\n// \t},\n// });\n// Template.hello.events({\n// \t'click button'(event, instance) {\n// \t\t// increment the counter when button is clicked\n// \t\tinstance.counter.set(instance.counter.get() + 1);\n// \t},\n// });\n\nTemplate.map.helpers({\n  geolocationError: function () {\n    var error = Geolocation.error();\n    return error && error.message;\n  },\n  mapOptions: function () {\n    var latLng = Geolocation.latLng(); // Initialize the map once we have the latLng.\n\n    if (GoogleMaps.loaded() && latLng) {\n      return {\n        center: new google.maps.LatLng(latLng.lat, latLng.lng),\n        zoom: 1\n      };\n    }\n  }\n});\nTemplate.body.events({\n  'submit .newoman': function (event) {\n    // Prevent default browser form submit\n    event.preventDefault(); // Get value from form element\n\n    alert(\"went\");\n    var name = event.myname;\n    var city = event.city;\n    var geocoder = new google.maps.Geocoder();\n\n    function geocodeAddress(geocoder, resultsMap, address) {\n      geocoder.geocode({\n        'address': address\n      }, function (results, status) {\n        if (status === 'OK') {\n          resultsMap.setCenter(results[0].geometry.location);\n          var marker = new google.maps.Marker({\n            map: resultsMap,\n            position: results[0].geometry.location\n          });\n          alert(\"and\");\n        } else {\n          alert('Geocode was not successful for the following reason: ' + status);\n        }\n      });\n    }\n\n    var ll = geocoder.geocode({\n      'address': address\n    }, function (results, status) {\n      if (status === 'OK') {\n        Women.insert({\n          name: name,\n          lat: results[0].geometry.location.lat,\n          lon: results[0].geometry.location.lng\n        });\n      } else {\n        alert('Geocode was not successful for the following reason: ' + status);\n      }\n    }); // Insert a task into the collection\n  }\n});\nTemplate.map.onCreated(function () {\n  GoogleMaps.ready('map', function (map) {\n    var women = Women.find({}).collection._docs._map;\n\n    for (var woman in meteorBabelHelpers.sanitizeForInObject(women)) {\n      var myinfowindow = new google.maps.InfoWindow({\n        content: women[woman].name\n      });\n      marker = new google.maps.Marker({\n        position: new google.maps.LatLng(women[woman].lat, women[woman].lon),\n        map: map.instance,\n        infowindow: myinfowindow\n      });\n      google.maps.event.addListener(marker, 'click', function () {\n        this.infowindow.open(map, this);\n      });\n      ;\n    }\n  });\n});","ast":null,"map":{"version":3,"sources":["/client/main.js"],"names":["Template","module","import","v","ReactiveVar","Women","Meteor","startup","GoogleMaps","load","key","map","helpers","geolocationError","error","Geolocation","message","mapOptions","latLng","loaded","center","google","maps","LatLng","lat","lng","zoom","body","events","event","preventDefault","alert","name","myname","city","geocoder","Geocoder","geocodeAddress","resultsMap","address","geocode","results","status","setCenter","geometry","location","marker","Marker","position","ll","insert","lon","onCreated","ready","women","find","collection","_docs","_map","woman","myinfowindow","InfoWindow","content","instance","infowindow","addListener","open"],"mappings":"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","file":"/client/main.js.map","sourcesContent":["import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport './main.html';\nimport {Women} from '../imports/api/women.js';\nMeteor.startup(function() {  \n\tGoogleMaps.load({key: \"AIzaSyDIB1UZP3aXcXs7XwYndOpJWI6Spe2K-Nk\" });\n\n\n});\n\n// Template.hello.onCreated(function helloOnCreated() {\n// \t// counter starts at 0\n// \tthis.counter = new ReactiveVar(0);\n// });\n\n// Template.hello.helpers({\n// \tcounter() {\n// \t\treturn Template.instance().counter.get();\n// \t},\n// });\n\n// Template.hello.events({\n// \t'click button'(event, instance) {\n// \t\t// increment the counter when button is clicked\n// \t\tinstance.counter.set(instance.counter.get() + 1);\n// \t},\n// });\n\nTemplate.map.helpers({  \n\tgeolocationError: function() {\n\t\tvar error = Geolocation.error();\n\t\treturn error && error.message;\n\t},\n\tmapOptions: function() {\n\t\tvar latLng = Geolocation.latLng();\n\t\t// Initialize the map once we have the latLng.\n\t\tif (GoogleMaps.loaded() && latLng) {\n\t\t\treturn {\n\t\t\t\tcenter: new google.maps.LatLng(latLng.lat, latLng.lng),\n\t\t\t\tzoom:1 \n\t\t\t};\n\t\t}\n\t}\n});\n\nTemplate.body.events({\n\n  'submit .newoman'(event) {\n\n    // Prevent default browser form submit\n\n    event.preventDefault();\n\n \n\n    // Get value from form element\nalert(\"went\");\n    const name = event.myname;\n\n    const city = event.city;\n\nvar geocoder = new google.maps.Geocoder();\n\tfunction geocodeAddress(geocoder, resultsMap, address) {\n\n        geocoder.geocode({'address': address}, function(results, status) {\n          if (status === 'OK') {\n            resultsMap.setCenter(results[0].geometry.location);\n            var marker = new google.maps.Marker({\n              map: resultsMap,\n              position: results[0].geometry.location\n            });\n\t\t  alert(\"and\");\n          } else {\n            alert('Geocode was not successful for the following reason: ' + status);\n          }\n        });\n      }\n\t  var ll = geocoder.geocode({'address': address}, function(results, status) {\n          if (status === 'OK') {\n            Women.insert({\n\n\t\t    name:name,\n\t\t    lat:results[0].geometry.location.lat,\n\t\t    lon:results[0].geometry.location.lng\n\n    });\n\n            \n\n          } else {\n            alert('Geocode was not successful for the following reason: ' + status);\n          }\n        });\n\n \n\n    // Insert a task into the collection\n\n\n\n \n\n\n  },\n\n});\n\n\nTemplate.map.onCreated(function() { \n\n\tGoogleMaps.ready('map', function(map) {\n\tvar women=Women.find({}).collection._docs._map;\n\t\t\n\t\t\t\tfor (var woman in women){\n\t\t\t\t\tvar myinfowindow = new google.maps.InfoWindow({\n    content: women[woman].name\n});\n\t\t\t\tmarker = new google.maps.Marker({\n\t\t\t\tposition: new google.maps.LatLng(women[woman].lat,women[woman].lon),\n\t\t\t\tmap: map.instance,\n\t\t\t\t\tinfowindow:myinfowindow\n\t\t\t});\t\n\ngoogle.maps.event.addListener(marker, 'click', function() {\n        this.infowindow.open(map, this);\n\n});\n\n\n\t\t\t\t\t;}\n\t});\n});\n"]},"hash":"d3a12500cd7c73b345334f489ba9051ae4a9233d"}
