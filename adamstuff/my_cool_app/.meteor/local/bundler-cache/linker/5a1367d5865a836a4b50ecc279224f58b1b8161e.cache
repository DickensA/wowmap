[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nGoogleMaps = Package['dburles:google-maps'].GoogleMaps;\nGeolocation = Package['mdg:geolocation'].Geolocation;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":[\"./template.main.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// client/main.html                                                                             //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.exports = require(\"./template.main.js\");                                                 // 1\n                                                                                                // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.main.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// client/template.main.js                                                                      //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\n                                                                                                // 1\nTemplate.body.addContent((function() {                                                          // 2\n  var view = this;                                                                              // 3\n  return [ HTML.Raw('<div class=\"header\">\\n    <button class=\"mbutton\">Add me to the map!</button>\\n    <h1>Welcome to the World of Women in Tech</h1>\\n  </div>\\n\\n<div>\\n  <p>Find awesome women in STEM from all around the globe by exploring our World of WiT (Women in Technology) map.</p>\\n</div>\\n\\n  '), Spacebars.include(view.lookupTemplate(\"map\")), HTML.Raw('\\n\\n<div class=\"form\">\\n  <form action=\"\">\\n      <label for=\"fname\">My Name is</label>\\n      <input type=\"text\" id=\"name\" name=\"myname\" placeholder=\"Your name..\">\\n      <label for=\"city\">My City is</label>\\n      <input type=\"text\" id=\"city\" name=\"mycity\" placeholder=\"Your City..\">\\n      <label for=\"country\">My Country is</label>\\n      <input type=\"text\" id=\"country\" name=\"mycountry\" placeholder=\"Your Country..\">\\n      <input type=\"submit\" value=\"Add me to the map!\">\\n   \\n  </form>\\n</div>\\n\\n<footer class=\"footer\">\\n  <h2>Women inspiring EVERYONE</h2>\\n    <p class=\"sign\">Created by <a href=\"http://github.com/Surfad\">Adam</a>, <a href=\"http://github.com/pzach\"> Peter</a> and <a href=\"http://github.com/dickensa\">Amy</a>\\n    </p>\\n</footer>') ];\n}));                                                                                            // 5\nMeteor.startup(Template.body.renderToDocument);                                                 // 6\n                                                                                                // 7\nTemplate.__checkName(\"map\");                                                                    // 8\nTemplate[\"map\"] = new Template(\"Template.map\", (function() {                                    // 9\n  var view = this;                                                                              // 10\n  return HTML.DIV({                                                                             // 11\n    class: \"map-container\"                                                                      // 12\n  }, \"\\n    \", Blaze.Unless(function() {                                                        // 13\n    return Spacebars.call(view.lookup(\"geolocationError\"));                                     // 14\n  }, function() {                                                                               // 15\n    return [ \"\\n      \", Blaze._TemplateWith(function() {                                       // 16\n      return {                                                                                  // 17\n        name: Spacebars.call(\"map\"),                                                            // 18\n        options: Spacebars.call(view.lookup(\"mapOptions\"))                                      // 19\n      };                                                                                        // 20\n    }, function() {                                                                             // 21\n      return Spacebars.include(view.lookupTemplate(\"googleMap\"));                               // 22\n    }), \"\\n    \" ];                                                                             // 23\n  }, function() {                                                                               // 24\n    return [ \"\\n      Geolocation failed: \", Blaze.View(\"lookup:geolocationError\", function() {\n      return Spacebars.mustache(view.lookup(\"geolocationError\"));                               // 26\n    }), \"\\n    \" ];                                                                             // 27\n  }), \"\\n  \");                                                                                  // 28\n}));                                                                                            // 29\n                                                                                                // 30\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/templating\",\"meteor/reactive-var\",\"./main.html\",\"../imports/api/women.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// client/main.js                                                                               //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nvar Template = void 0;                                                                          // 1\nmodule.import('meteor/templating', {                                                            // 1\n\t\"Template\": function (v) {                                                                     // 1\n\t\tTemplate = v;                                                                                 // 1\n\t}                                                                                              // 1\n}, 0);                                                                                          // 1\nvar ReactiveVar = void 0;                                                                       // 1\nmodule.import('meteor/reactive-var', {                                                          // 1\n\t\"ReactiveVar\": function (v) {                                                                  // 1\n\t\tReactiveVar = v;                                                                              // 1\n\t}                                                                                              // 1\n}, 1);                                                                                          // 1\nmodule.import('./main.html');                                                                   // 1\nvar Women = void 0;                                                                             // 1\nmodule.import('../imports/api/women.js', {                                                      // 1\n\t\"Women\": function (v) {                                                                        // 1\n\t\tWomen = v;                                                                                    // 1\n\t}                                                                                              // 1\n}, 3);                                                                                          // 1\nMeteor.startup(function () {                                                                    // 5\n\tGoogleMaps.load();                                                                             // 6\n}); // Template.hello.onCreated(function helloOnCreated() {                                     // 9\n// \t// counter starts at 0                                                                      // 12\n// \tthis.counter = new ReactiveVar(0);                                                          // 13\n// });                                                                                          // 14\n// Template.hello.helpers({                                                                     // 16\n// \tcounter() {                                                                                 // 17\n// \t\treturn Template.instance().counter.get();                                                  // 18\n// \t},                                                                                          // 19\n// });                                                                                          // 20\n// Template.hello.events({                                                                      // 22\n// \t'click button'(event, instance) {                                                           // 23\n// \t\t// increment the counter when button is clicked                                            // 24\n// \t\tinstance.counter.set(instance.counter.get() + 1);                                          // 25\n// \t},                                                                                          // 26\n// });                                                                                          // 27\n                                                                                                //\nTemplate.map.helpers({                                                                          // 29\n\tgeolocationError: function () {                                                                // 30\n\t\tvar error = Geolocation.error();                                                              // 31\n\t\treturn error && error.message;                                                                // 32\n\t},                                                                                             // 33\n\tmapOptions: function () {                                                                      // 34\n\t\tvar latLng = Geolocation.latLng(); // Initialize the map once we have the latLng.             // 35\n                                                                                                //\n\t\tif (GoogleMaps.loaded() && latLng) {                                                          // 37\n\t\t\treturn {                                                                                     // 38\n\t\t\t\tcenter: new google.maps.LatLng(latLng.lat, latLng.lng),                                     // 39\n\t\t\t\tzoom: 1                                                                                     // 40\n\t\t\t};                                                                                           // 38\n\t\t}                                                                                             // 42\n\t}                                                                                              // 43\n});                                                                                             // 29\nTemplate.map.onCreated(function () {                                                            // 46\n\tGoogleMaps.ready('map', function (map) {                                                       // 47\n\t\tvar women = Women.find({}).collection._docs._map;                                             // 48\n                                                                                                //\n\t\tfor (var woman in meteorBabelHelpers.sanitizeForInObject(women)) {                            // 50\n\t\t\tvar myinfowindow = new google.maps.InfoWindow({                                              // 51\n\t\t\t\tcontent: women[woman].name                                                                  // 52\n\t\t\t});                                                                                          // 51\n\t\t\tmarker = new google.maps.Marker({                                                            // 54\n\t\t\t\tposition: new google.maps.LatLng(women[woman].lat, women[woman].lon),                       // 55\n\t\t\t\tmap: map.instance,                                                                          // 56\n\t\t\t\tinfowindow: myinfowindow                                                                    // 57\n\t\t\t});                                                                                          // 54\n\t\t\tgoogle.maps.event.addListener(marker, 'click', function () {                                 // 60\n\t\t\t\tthis.infowindow.open(map, this);                                                            // 61\n\t\t\t});                                                                                          // 63\n\t\t\t;                                                                                            // 66\n\t\t}                                                                                             // 66\n\t});                                                                                            // 67\n});                                                                                             // 68\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"imports\":{\"api\":{\"women.js\":[\"meteor/mongo\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/api/women.js                                                                         //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({                                                                                 // 1\n  Women: function () {                                                                          // 1\n    return Women;                                                                               // 1\n  }                                                                                             // 1\n});                                                                                             // 1\nvar Mongo = void 0;                                                                             // 1\nmodule.import('meteor/mongo', {                                                                 // 1\n  \"Mongo\": function (v) {                                                                       // 1\n    Mongo = v;                                                                                  // 1\n  }                                                                                             // 1\n}, 0);                                                                                          // 1\nvar Women = new Mongo.Collection('women');                                                      // 4\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/main.js","/imports/api/women.js"],"names":["Template","module","import","v","ReactiveVar","Women","Meteor","startup","GoogleMaps","load","map","helpers","geolocationError","error","Geolocation","message","mapOptions","latLng","loaded","center","google","maps","LatLng","lat","lng","zoom","onCreated","ready","women","find","collection","_docs","_map","woman","myinfowindow","InfoWindow","content","name","marker","Marker","position","lon","instance","infowindow","event","addListener","open","export","Mongo","Collection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,iBAAJ;AAAaC,OAAOC,MAAP,CAAc,mBAAd,EAAkC;AAAC,aAAW,UAASC,CAAT,EAAW;AAACH,aAASG,CAAT;AAAW;AAAnC,CAAlC,EAAuE,CAAvE;AAA0E,IAAIC,oBAAJ;AAAgBH,OAAOC,MAAP,CAAc,qBAAd,EAAoC;AAAC,gBAAc,UAASC,CAAT,EAAW;AAACC,gBAAYD,CAAZ;AAAc;AAAzC,CAApC,EAA+E,CAA/E;AAAkFF,OAAOC,MAAP,CAAc,aAAd;AAA6B,IAAIG,cAAJ;AAAUJ,OAAOC,MAAP,CAAc,yBAAd,EAAwC;AAAC,UAAQ,UAASC,CAAT,EAAW;AAACE,UAAMF,CAAN;AAAQ;AAA7B,CAAxC,EAAuE,CAAvE;AAIhOG,OAAOC,OAAP,CAAe,YAAW;AACzBC,YAAWC,IAAX;AAGA,CAJD,E,CAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAT,SAASU,GAAT,CAAaC,OAAb,CAAqB;AACpBC,mBAAkB,YAAW;AAC5B,MAAIC,QAAQC,YAAYD,KAAZ,EAAZ;AACA,SAAOA,SAASA,MAAME,OAAtB;AACA,EAJmB;AAKpBC,aAAY,YAAW;AACtB,MAAIC,SAASH,YAAYG,MAAZ,EAAb,CADsB,CAEtB;;AACA,MAAIT,WAAWU,MAAX,MAAuBD,MAA3B,EAAmC;AAClC,UAAO;AACNE,YAAQ,IAAIC,OAAOC,IAAP,CAAYC,MAAhB,CAAuBL,OAAOM,GAA9B,EAAmCN,OAAOO,GAA1C,CADF;AAENC,UAAK;AAFC,IAAP;AAIA;AACD;AAdmB,CAArB;AAiBAzB,SAASU,GAAT,CAAagB,SAAb,CAAuB,YAAW;AACjClB,YAAWmB,KAAX,CAAiB,KAAjB,EAAwB,UAASjB,GAAT,EAAc;AACtC,MAAIkB,QAAMvB,MAAMwB,IAAN,CAAW,EAAX,EAAeC,UAAf,CAA0BC,KAA1B,CAAgCC,IAA1C;;AAEG,OAAK,IAAIC,KAAT,2CAAkBL,KAAlB,GAAwB;AACvB,OAAIM,eAAe,IAAId,OAAOC,IAAP,CAAYc,UAAhB,CAA2B;AAC/CC,aAASR,MAAMK,KAAN,EAAaI;AADyB,IAA3B,CAAnB;AAGDC,YAAS,IAAIlB,OAAOC,IAAP,CAAYkB,MAAhB,CAAuB;AAChCC,cAAU,IAAIpB,OAAOC,IAAP,CAAYC,MAAhB,CAAuBM,MAAMK,KAAN,EAAaV,GAApC,EAAwCK,MAAMK,KAAN,EAAaQ,GAArD,CADsB;AAEhC/B,SAAKA,IAAIgC,QAFuB;AAG/BC,gBAAWT;AAHoB,IAAvB,CAAT;AAMJd,UAAOC,IAAP,CAAYuB,KAAZ,CAAkBC,WAAlB,CAA8BP,MAA9B,EAAsC,OAAtC,EAA+C,YAAW;AAClD,SAAKK,UAAL,CAAgBG,IAAhB,CAAqBpC,GAArB,EAA0B,IAA1B;AAEP,IAHD;AAMK;AAAE;AACL,EApBD;AAqBA,CAtBD,oG;;;;;;;;;;;AC7CAT,OAAO8C,MAAP,CAAc;AAAC1C,SAAM,YAAU;AAAC,WAAOA,KAAP;AAAa;AAA/B,CAAd;AAAgD,IAAI2C,cAAJ;AAAU/C,OAAOC,MAAP,CAAc,cAAd,EAA6B;AAAC,WAAQ,UAASC,CAAT,EAAW;AAAC6C,YAAM7C,CAAN;AAAQ;AAA7B,CAA7B,EAA4D,CAA5D;AAGnD,IAAME,QAAQ,IAAI2C,MAAMC,UAAV,CAAqB,OAArB,CAAd,2D","file":"/app.js","sourcesContent":["import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport './main.html';\nimport {Women} from '../imports/api/women.js';\nMeteor.startup(function() {  \n\tGoogleMaps.load();\n\n\n});\n\n// Template.hello.onCreated(function helloOnCreated() {\n// \t// counter starts at 0\n// \tthis.counter = new ReactiveVar(0);\n// });\n\n// Template.hello.helpers({\n// \tcounter() {\n// \t\treturn Template.instance().counter.get();\n// \t},\n// });\n\n// Template.hello.events({\n// \t'click button'(event, instance) {\n// \t\t// increment the counter when button is clicked\n// \t\tinstance.counter.set(instance.counter.get() + 1);\n// \t},\n// });\n\nTemplate.map.helpers({  \n\tgeolocationError: function() {\n\t\tvar error = Geolocation.error();\n\t\treturn error && error.message;\n\t},\n\tmapOptions: function() {\n\t\tvar latLng = Geolocation.latLng();\n\t\t// Initialize the map once we have the latLng.\n\t\tif (GoogleMaps.loaded() && latLng) {\n\t\t\treturn {\n\t\t\t\tcenter: new google.maps.LatLng(latLng.lat, latLng.lng),\n\t\t\t\tzoom:1 \n\t\t\t};\n\t\t}\n\t}\n});\n\nTemplate.map.onCreated(function() {  \n\tGoogleMaps.ready('map', function(map) {\n\tvar women=Women.find({}).collection._docs._map;\n\t\t\n\t\t\t\tfor (var woman in women){\n\t\t\t\t\tvar myinfowindow = new google.maps.InfoWindow({\n    content: women[woman].name\n});\n\t\t\t\tmarker = new google.maps.Marker({\n\t\t\t\tposition: new google.maps.LatLng(women[woman].lat,women[woman].lon),\n\t\t\t\tmap: map.instance,\n\t\t\t\t\tinfowindow:myinfowindow\n\t\t\t});\t\n\ngoogle.maps.event.addListener(marker, 'click', function() {\n        this.infowindow.open(map, this);\n\n});\n\n\n\t\t\t\t\t;}\n\t});\n});\n","import { Mongo } from 'meteor/mongo';\n\n\nexport const Women = new Mongo.Collection('women');\n\n"]}}]