{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"var Template = void 0;\nmodule.import('meteor/templating', {\n\t\"Template\": function (v) {\n\t\tTemplate = v;\n\t}\n}, 0);\nvar ReactiveVar = void 0;\nmodule.import('meteor/reactive-var', {\n\t\"ReactiveVar\": function (v) {\n\t\tReactiveVar = v;\n\t}\n}, 1);\nmodule.import('./main.html');\nvar Women = void 0;\nmodule.import('../imports/api/women.js', {\n\t\"Women\": function (v) {\n\t\tWomen = v;\n\t}\n}, 3);\nMeteor.startup(function () {\n\tGoogleMaps.load({\n\t\tkey: \"AIzaSyDIB1UZP3aXcXs7XwYndOpJWI6Spe2K-Nk\"\n\t});\n\tvar mappy;\n}); // Template.hello.onCreated(function helloOnCreated() {\n// \t// counter starts at 0\n// \tthis.counter = new ReactiveVar(0);\n// });\n// Template.hello.helpers({\n// \tcounter() {\n// \t\treturn Template.instance().counter.get();\n// \t},\n// });\n// Template.hello.events({\n// \t'click button'(event, instance) {\n// \t\t// increment the counter when button is clicked\n// \t\tinstance.counter.set(instance.counter.get() + 1);\n// \t},\n// });\n\nTemplate.map.helpers({\n\tgeolocationError: function () {\n\t\tvar error = Geolocation.error();\n\t\treturn error && error.message;\n\t},\n\tmapOptions: function () {\n\t\tvar latLng = Geolocation.latLng(); // Initialize the map once we have the latLng.\n\n\t\tif (GoogleMaps.loaded() && latLng) {\n\t\t\treturn {\n\t\t\t\tcenter: new google.maps.LatLng(latLng.lat, latLng.lng),\n\t\t\t\tzoom: 1\n\t\t\t};\n\t\t}\n\t}\n});\nTemplate.body.events({\n\t'submit .newoman': function (event) {\n\t\t// Prevent default browser form submit\n\t\tevent.preventDefault(); // Get value from form element\n\n\t\tvar lname = event.target.myname.value;\n\t\tvar city = event.target.mycity.value;\n\t\tvar geocoder = new google.maps.Geocoder();\n\t\tvar ll = geocoder.geocode({\n\t\t\t'address': city\n\t\t}, function (results, status) {\n\t\t\tif (status === 'OK') {\n\t\t\t\tWomen.insert({\n\t\t\t\t\tname: lname,\n\t\t\t\t\tlat: results[0].geometry.location.lat(),\n\t\t\t\t\tlon: results[0].geometry.location.lng()\n\t\t\t\t});\n\t\t\t\tmarker = new google.maps.Marker({\n\t\t\t\t\tposition: new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng()),\n\t\t\t\t\tmap: map,\n\t\t\t\t\tanimation: google.maps.Animation.DROP\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\talert('Geocode was not successful for the following reason: ' + status);\n\t\t\t}\n\t\t}); // Insert a task into the collection\n\n\t\tWomen.insert({\n\t\t\tname: lname,\n\t\t\tlat: ll.lat(),\n\t\t\tlon: ll.lng()\n\t\t});\n\t}\n});\nTemplate.map.onCreated(function () {\n\tGoogleMaps.ready('map', function (map) {\n\t\tvar women = Women.find({}).collection._docs._map;\n\n\t\tfor (var woman in meteorBabelHelpers.sanitizeForInObject(women)) {\n\t\t\tvar myinfowindow = new google.maps.InfoWindow({\n\t\t\t\tcontent: women[woman].name\n\t\t\t});\n\t\t\tmarker = new google.maps.Marker({\n\t\t\t\tposition: new google.maps.LatLng(women[woman].lat, women[woman].lon),\n\t\t\t\tmap: map.instance,\n\t\t\t\tinfowindow: myinfowindow\n\t\t\t});\n\t\t\tgoogle.maps.event.addListener(marker, 'click', function () {\n\t\t\t\tthis.infowindow.open(map, this);\n\t\t\t\tmappy = this;\n\t\t\t});\n\t\t\t;\n\t\t}\n\t});\n});","ast":null,"map":{"version":3,"sources":["/client/main.js"],"names":["Template","module","import","v","ReactiveVar","Women","Meteor","startup","GoogleMaps","load","key","mappy","map","helpers","geolocationError","error","Geolocation","message","mapOptions","latLng","loaded","center","google","maps","LatLng","lat","lng","zoom","body","events","event","preventDefault","lname","target","myname","value","city","mycity","geocoder","Geocoder","ll","geocode","results","status","insert","name","geometry","location","lon","marker","Marker","position","animation","Animation","DROP","alert","onCreated","ready","women","find","collection","_docs","_map","woman","myinfowindow","InfoWindow","content","instance","infowindow","addListener","open"],"mappings":"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","file":"/client/main.js.map","sourcesContent":["import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport './main.html';\nimport {Women} from '../imports/api/women.js';\nMeteor.startup(function() {  \n\tGoogleMaps.load({key: \"AIzaSyDIB1UZP3aXcXs7XwYndOpJWI6Spe2K-Nk\" });\nvar mappy;\n\n});\n\n// Template.hello.onCreated(function helloOnCreated() {\n// \t// counter starts at 0\n// \tthis.counter = new ReactiveVar(0);\n// });\n\n// Template.hello.helpers({\n// \tcounter() {\n// \t\treturn Template.instance().counter.get();\n// \t},\n// });\n\n// Template.hello.events({\n// \t'click button'(event, instance) {\n// \t\t// increment the counter when button is clicked\n// \t\tinstance.counter.set(instance.counter.get() + 1);\n// \t},\n// });\n\nTemplate.map.helpers({  \n\tgeolocationError: function() {\n\t\tvar error = Geolocation.error();\n\t\treturn error && error.message;\n\t},\n\tmapOptions: function() {\n\t\tvar latLng = Geolocation.latLng();\n\t\t// Initialize the map once we have the latLng.\n\t\tif (GoogleMaps.loaded() && latLng) {\n\t\t\treturn {\n\t\t\t\tcenter: new google.maps.LatLng(latLng.lat, latLng.lng),\n\t\t\t\tzoom:1 \n\t\t\t};\n\t\t}\n\t}\n});\n\nTemplate.body.events({\n\n  'submit .newoman'(event) {\n\n    // Prevent default browser form submit\n\n    event.preventDefault();\n\n \n\n    // Get value from form element\n\n    var lname = event.target.myname.value;\n\t  \n    var city = event.target.mycity.value;\n\nvar geocoder = new google.maps.Geocoder();\n\t  var ll = geocoder.geocode({'address': city}, function(results, status) {\n          if (status === 'OK') {\n\t\t \n            Women.insert({\n\t\t    name:lname,\n\t\t    lat:results[0].geometry.location.lat(),\n\t\t    lon:results[0].geometry.location.lng()\n\n    });   marker= new google.maps.Marker({\n\t\t\t\tposition: new google.maps.LatLng(results[0].geometry.location.lat(),results[0].geometry.location.lng()\n),\n\t\t\t\tmap: map,\n\t    animation: google.maps.Animation.DROP,\n\n\t\t\t});\t\n\n\n          } else {\n            alert('Geocode was not successful for the following reason: ' + status);\n          }\n        });\n\n \n\n    // Insert a task into the collection\n\nWomen.insert({\n\t\t    name:lname,\n\t\t    lat:ll.lat(),\n\t\t    lon:ll.lng()\n\n    });     \n\n\n \n\n\n  },\n\n});\n\n\nTemplate.map.onCreated(function() { \n\n\tGoogleMaps.ready('map', function(map) {\n\tvar women=Women.find({}).collection._docs._map;\n\t\t\n\t\t\t\tfor (var woman in women){\n\t\t\t\t\tvar myinfowindow = new google.maps.InfoWindow({\n    content: women[woman].name\n});\n\t\t\t\tmarker = new google.maps.Marker({\n\t\t\t\tposition: new google.maps.LatLng(women[woman].lat,women[woman].lon),\n\t\t\t\tmap: map.instance,\n\t\t\t\t\tinfowindow:myinfowindow\n\t\t\t});\t\n\ngoogle.maps.event.addListener(marker, 'click', function() {\n        this.infowindow.open(map, this);\nmappy=this;\n});\n\n\n\t\t\t\t\t;}\n\t});\n});\n"]},"hash":"ef27ac050edb2160ccdc585ebe6b4980ff9be845"}
